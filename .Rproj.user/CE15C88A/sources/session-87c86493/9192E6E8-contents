---
title: "Analysis of intrahepatic HBsAg expression"
author: "Koen Van den Berge"
date: '2023-04-25'
output: html_document
---

```{r}
suppressPackageStartupMessages(library(tidyverse))
```

# Import

```{r}
data <- read.csv("../data/sAgHinrich/R_Results.csv")
data$Subject.ID <- unlist(lapply(strsplit(data$filename, split="_"), "[", 1))
data$timepoint <- gsub(x=unlist(lapply(strsplit(data$filename, split="_"), "[", 2)),
                       pattern=".csv", replacement="", fixed = TRUE)
data$Visit.Week <- NA
data$Visit.Week[data$timepoint == "1"] <- "W -1"
data$Visit.Week[data$timepoint == "2"] <- "W 40"
data$Visit.Week[data$timepoint == "FUW24"] <- "FUW 24"
data$subjectTime <- paste0(data$Subject.ID,"_",data$Visit.Week)
```

# Merge with clinical to get panel info

```{r}
adef <- haven::read_sas("../data/clinical/adef.sas7bdat")
adefIk <- unique(adef[,c("USUBJID","APANEL")])
adefIk$subjectID <- unlist(lapply(strsplit(adefIk$USUBJID, split="-"), "[[", 2))

data$panel <- adefIk$APANEL[match(data$Subject.ID, adefIk$subjectID)]

## clean data frame
df <- data.frame(patientID=data$Subject.ID,
                 visit=data$Visit.Week,
                 panel=data$panel,
                 totalCells=data$total,
                 totalHepatocytes=data$CK18pos,
                 sAgPosCells=data$sAgPos,
                 sAgPosHepatocytes=data$sAgPos_hep,
                 sAgPosCells_proportion=data$sAgPos/data$total * 100,
                 sAgPosHepatocytes_proportion=data$sAgPos_hep/data$CK18pos * 100)
df$visit <- factor(df$visit, levels = c("W -1", "W 40", "FUW 24"))
df$panel <- factor(df$panel, levels = c("Panel 1", "Panel 2"))

table(df$visit, df$panel)
```

# Visualization

Note that plot on log-scale must add a small number to avoid `log(0)=-Inf`.
We have therefore added $1e-2$.

```{r}
library(ggplot2)
theme_set(theme_bw())

ggplot(df, aes(x=visit, y=sAgPosHepatocytes_proportion)) +
  geom_violin() +
  geom_point(position=position_dodge()) +
  geom_line(aes(group=patientID)) +
  facet_wrap(. ~ panel, scales="free") + 
  ylab("Proportion of HBsAg+ cells")

ggplot(df, aes(x=visit, y=sAgPosHepatocytes_proportion+1e-2)) +
  geom_violin() +
  geom_point(position=position_dodge()) +
  geom_line(aes(group=patientID)) +
  facet_wrap(. ~ panel) + 
  ylab("Proportion of HBsAg+ cells") +
  scale_y_continuous(trans='log', 
                     breaks=c(1e-2, 0.01, 0.1, 1, 10, 20, 50, 75, 100),
                     limits=c(1e-2, 100))

## for Marianne to know which patients change how.
ggplot(df, aes(x=visit, y=sAgPosHepatocytes_proportion+1e-2)) +
  geom_violin() +
  geom_point(position=position_dodge()) +
  geom_line(aes(group=patientID)) +
  facet_wrap(. ~ patientID) + 
  ylab("Proportion of HBsAg+ cells") +
  scale_y_continuous(trans='log', 
                     breaks=c(1e-2, 0.01, 0.1, 1, 10, 20, 50, 75, 100),
                     limits=c(1e-2, 100))



ggplot(df, aes(x=panel, y=sAgPosHepatocytes_proportion+1e-2)) +
  geom_violin() +
  geom_point(position=position_dodge()) +
  geom_line(aes(group=patientID)) +
  facet_wrap(. ~ visit) + 
  ylab("Proportion of HBsAg+ cells") +
  scale_y_continuous(trans='log', 
                     breaks=c(1e-2, 0.01, 0.1, 1, 10, 20, 50, 75, 100),
                     limits=c(1e-2, 100))


ggplot(df, aes(x=panel, y=sAgPosHepatocytes_proportion+1e-2)) +
  geom_violin() +
  geom_point(position=position_jitter(width=.2)) +
  geom_line(aes(group=patientID)) +
  facet_wrap(. ~ visit) + 
  ylab("Proportion of HBsAg+ cells") +
  scale_y_continuous(trans='log', 
                     breaks=c(1e-2, 0.01, 0.1, 1, 10, 20, 50, 75, 100),
                     limits=c(1e-2, 100))


dfbasepanel1 <- df[df$visit == "W -1" & df$panel == "Panel 1",]
sort(dfbasepanel1$sAgPosHepatocytes_proportion)

library(tidyverse)
df %>% 
  group_by(visit,panel) %>% 
  summarize(minS=min(sAgPosHepatocytes_proportion))
```

# Statistical model and inference on treatment/time effect {.tabset .tabset-pills}

```{r}
library(glmmTMB)
df$fracPositive <- df$sAgPosHepatocytes_proportion/100
mBB <- glmmTMB(fracPositive ~ visit*panel + (1|patientID),
                  family = betabinomial(link = "logit"),
                weights = totalHepatocytes,
                data = df)
```


## Panel 1

```{r}
summary(mBB)
```

## Panel 2

```{r}
library(multcomp)
L <- matrix(0, nrow=length(fixef(mBB)$cond), ncol=1)
rownames(L) <- names(fixef(mBB)$cond)
L[c("visitW 40", "visitW 40:panelPanel 2")] <- 1
g1 <- glht(mBB, t(L))

dfPanel2 <- df[df$panel == "Panel 2",]
mBB <- glmmTMB(fracPositive ~ visit + patientID,
                  family = betabinomial(link = "logit"),
                weights = totalHepatocytes,
                data = dfPanel2)
summary(mBB)
sigma(mBB)
```

# Statistical model and inference on panel effect {.tabset .tabset-pills}

## Baseline

```{r}
dfBaseline <- df[df$visit == "W -1",]
mBB <- glmmTMB(fracPositive ~ panel,
                  family = betabinomial(link = "logit"),
                weights = totalHepatocytes,
                data = dfBaseline)
summary(mBB)
sigma(mBB)
```

## W40

```{r}
dfW40 <- df[df$visit == "W 40",]
mBB <- glmmTMB(fracPositive ~ panel,
                  family = betabinomial(link = "logit"),
                weights = totalHepatocytes,
                data = dfW40)
summary(mBB)
sigma(mBB)
```

# AASLD abstract information

## Number of samples per visit $\times$ panel

```{r}
df %>% 
  group_by(visit, panel) %>%
  summarize(nSamples = n())
```


## Mean and SE for each fraction per visit $\times$ panel

```{r}
mFull <- glmmTMB(fracPositive ~ visit*panel + (1|patientID),
                  family = betabinomial(link = "logit"),
                weights = totalHepatocytes,
                data = df)
summary(mFull)

### Model-based mean (weighted average)
ndf <- data.frame(visit=rep(unique(df$visit), 2),
                  panel=rep(c("Panel 1", "Panel 2"), each=2),
                  patientID = df$patientID[10],
                  totalHepatocytes = mean(df$totalHepatocytes)) # patientID doesnt matter
preds <- predict(mFull, 
        type = "response", 
        se.fit = TRUE,
        newdata = ndf)
ndf$estFrac <- preds$fit
ndf$estFracSE <- preds$se.fit
ndf
```


### A note on empirical versus model-based mean

Note that the model-based mean noted above deviates from the empirical mean as shown below.

```{r}
df$visitPanel <- interaction(droplevels(df$visit), df$panel)
library(ggplot2)
ggplot(df, aes(x=visitPanel, y=sAgPosHepatocytes_proportion)) +
  geom_jitter(height = 0, width=.2)

### Empirical mean
dfEmp <- df %>% 
  group_by(visit, panel) %>%
  summarize(meanPosHep = mean(sAgPosHepatocytes_proportion))

dfMerged <- merge(ndf, dfEmp, by=c("visit", "panel"))
plot(x=dfMerged$meanPosHep/100, y=dfMerged$estFrac,
     xlab="Empirical mean", ylab="Model-based (weighted) mean") ; abline(0,1,col="red")

```

This, however, is because we are taking a weighted average where the weights are the number of hepatocytes.
Indeed, if we would be using no weights, the empirical and model-based mean agree exactly.

```{r}
mFullNoWeight <- glmmTMB(fracPositive ~ visit*panel + (1|patientID),
                  family = betabinomial(link = "logit"),
                # weights = totalHepatocytes,
                data = df)

preds <- predict(mFullNoWeight, 
        type = "response", 
        se.fit = TRUE,
        newdata = ndf)
ndf$estFrac <- preds$fit
ndf$estFracSE <- preds$se.fit
ndf


dfMerged <- merge(ndf, dfEmp, by=c("visit", "panel"))
plot(x=dfMerged$meanPosHep/100, y=dfMerged$estFrac,
     xlab="Empirical mean", ylab="Model-based mean (unweighted)") ; abline(0,1,col="red")

```

## Absolute change from baseline {.tabset .tabset-pills}

```{r}
logit <- function(x) log(x / (1-x))
expit <- function(x) {exp(x) / (1 + exp(x))}
beta <- fixef(mFull)
```


### panel 1, W40-W1

```{r}
expit(beta$cond["(Intercept)"] + beta$cond["visitW 40"]) - expit(beta$cond["(Intercept)"])
```


### panel 2, W40-W1

```{r}
expit(beta$cond["(Intercept)"] + beta$cond["visitW 40"] + beta$cond["panelPanel 2"] + beta$cond["visitW 40:panelPanel 2"]) - expit(beta$cond["(Intercept)"] + beta$cond["panelPanel 2"])
```

## Relative change from baseline {.tabset .tabset-pills}

Relative change is defined as "(estimated fraction at W40 - estimated fraction at baseline) / estimated fraction at baseline".

### panel 1, (W40 - W1) / W1

```{r}
(expit(beta$cond["(Intercept)"] + beta$cond["visitW 40"]) - expit(beta$cond["(Intercept)"])) / expit(beta$cond["(Intercept)"])
```


### panel 2, (W40 - W1) / W1

```{r}
(expit(beta$cond["(Intercept)"] + beta$cond["visitW 40"] + beta$cond["panelPanel 2"] + beta$cond["visitW 40:panelPanel 2"]) - expit(beta$cond["(Intercept)"] + beta$cond["panelPanel 2"])) / expit(beta$cond["(Intercept)"] + beta$cond["panelPanel 2"])
```


