geom_boxplot() +
theme_classic() +
facet_grid(.~pop_cov) +
theme(axis.text = element_text(size=12),
axis.title = element_text(size=14))
lupusMetaAll
pAge <-
ggplot(lupusMetaAll, aes(x=SLE_status, y=Age)) +
geom_boxplot()
pAge <- ggplot(lupusMetaAll, aes(x=SLE_status, y=Age)) +
geom_boxplot()
pAge
lupusMetaAll$Age <- as.numeric(lupusMetaAll$Age)
pAge <- ggplot(lupusMetaAll, aes(x=SLE_status, y=Age)) +
geom_boxplot()
pAge
pAge <- ggplot(lupusMetaAll, aes(x=SLE_status, y=Age)) +
geom_boxplot() +
theme_classic()
pAge
pAncestry <- ggplot(lupusMetaAll, aes(x=pop_cov, fill=SLE_status)) +
geom_bar(position="dodge")
pAncestry
pAncestry <- ggplot(lupusMetaAll, aes(x=pop_cov, fill=SLE_status)) +
geom_bar(position="dodge") +
theme_classic()
pAncestry
library(cowplot)
cowplot::plot_grid(pAge, pAncestry, NULL,
nrow=3, ncol=1, labels=letters[2:4])
cowplot::plot_grid(pAge, pAncestry, NULL,
nrow=1, ncol=3, labels=letters[2:4])
pRight <- cowplot::plot_grid(pAge, pAncestry, NULL,
nrow=3, ncol=1, labels=letters[2:4])
cowplot::plot_grid(pCLR, pRight, ncol=2, nrow=1, labels=c("a", NULL))
pCLR <- ggplot(lupusCountsLong, aes(x=CLR, y=celltype, fill=SLE_status)) +
geom_boxplot() +
theme_classic() +
facet_grid(.~pop_cov) +
theme(axis.text = element_text(size=12),
axis.title = element_text(size=14)) +
ylab("Cell type")
lupusMetaAll$Age <- as.numeric(lupusMetaAll$Age)
pAge <- ggplot(lupusMetaAll, aes(x=SLE_status, y=Age)) +
geom_boxplot() +
theme_classic()
pAge
pAncestry <- ggplot(lupusMetaAll, aes(x=pop_cov, fill=SLE_status)) +
geom_bar(position="dodge") +
theme_classic() +
xlab("Ancestry")
pAncestry
library(cowplot)
pRight <- cowplot::plot_grid(pAge, pAncestry, NULL,
nrow=3, ncol=1, labels=letters[2:4])
cowplot::plot_grid(pCLR, pRight, ncol=2, nrow=1, labels=c("a", NULL))
pCLR <- ggplot(lupusCountsLong, aes(x=CLR, y=celltype, fill=SLE_status)) +
geom_boxplot() +
theme_classic() +
facet_grid(.~pop_cov) +
theme(axis.text = element_text(size=12),
axis.title = element_text(size=14)) +
ylab("Cell type")
lupusMetaAll$Age <- as.numeric(lupusMetaAll$Age)
pAge <- ggplot(lupusMetaAll, aes(x=SLE_status, y=Age)) +
geom_boxplot() +
theme_classic()
pAge
pAncestry <- ggplot(lupusMetaAll, aes(x=pop_cov, fill=SLE_status)) +
geom_bar(position="dodge") +
theme_classic() +
xlab("Ancestry") +
ylab("Number of samples")
pAncestry
library(cowplot)
pRight <- cowplot::plot_grid(pAge, pAncestry, NULL,
nrow=3, ncol=1, labels=letters[2:4])
cowplot::plot_grid(pCLR, pRight, ncol=2, nrow=1, labels=c("a", NULL))
ggsave("231025_Baekeland_compositionAnalysisLupus.pdf", width=8, height=9)
library(limma)
library(voomCLR)
lupusCountsWide <- readRDS("../data/230705_popCountsWide_individualBatchID.rds")
table(lupusCountsWide$pop_cov) # paper looks at Asians and Europeans separately.
lupusCountsWide <- lupusCountsWide[!lupusCountsWide$pop_cov %in% c("African American", "Hispanic"),]
lupusCountsWide$pop_cov <- droplevels(lupusCountsWide$pop_cov)
lupusCountMatAll <- t(as.matrix(lupusCountsWide[,-c(1:10)]))
lupusMetaAll <- lupusCountsWide[,1:10]
## Asian data
lupusCountsWideAsian <- lupusCountsWide[lupusCountsWide$pop_cov == "Asian",]
lupusCountMatAsian <- t(as.matrix(lupusCountsWideAsian[,-c(1:10)]))
lupusMetaAsian <- lupusCountsWideAsian[,1:10]
## European data
lupusCountsWideEuropean <- lupusCountsWide[lupusCountsWide$pop_cov == "European",]
lupusCountMatEuropean <- t(as.matrix(lupusCountsWideEuropean[,-c(1:10)]))
lupusMetaEuropean <- lupusCountsWideEuropean[,1:10]
library(limma)
library(voomCLR)
lupusCountsWide <- readRDS("../data/230705_popCountsWide_individualBatchID.rds")
table(lupusCountsWide$pop_cov) # paper looks at Asians and Europeans separately.
lupusCountsWide <- lupusCountsWide[!lupusCountsWide$pop_cov %in% c("African American", "Hispanic"),]
lupusCountsWide$pop_cov <- droplevels(lupusCountsWide$pop_cov)
lupusCountMatAll <- t(as.matrix(lupusCountsWide[,-c(1:10)]))
lupusMetaAll <- lupusCountsWide[,1:10]
## Asian data
lupusCountsWideAsian <- lupusCountsWide[lupusCountsWide$pop_cov == "Asian",]
lupusCountMatAsian <- t(as.matrix(lupusCountsWideAsian[,-c(1:10)]))
lupusMetaAsian <- lupusCountsWideAsian[,1:10]
## European data
lupusCountsWideEuropean <- lupusCountsWide[lupusCountsWide$pop_cov == "European",]
lupusCountMatEuropean <- t(as.matrix(lupusCountsWideEuropean[,-c(1:10)]))
lupusMetaEuropean <- lupusCountsWideEuropean[,1:10]
designAll <- model.matrix(~SLE_status*pop_cov + Processing_Cohort, data=lupusMetaAll)
v <- voomCLR(counts = lupusCountMatAll,
design = designAll,
lib.size = NULL,
plot = TRUE,
span=.8)
lupusCLRMatAll <- v$E
library(scater)
pc <- calculatePCA(lupusCLRMatAll,
ncomponents=2,
ntop=11)
dfPCA <- cbind(data.frame(pc1=pc[,1], pc2=pc[,2]), lupusMetaAll)
dfPCA$Age <- as.numeric(dfPCA$Age)
ggplot(dfPCA, aes(x=pc1, y=pc2, col=group)) +
geom_point() +
theme_classic() +
xlab(paste0("PC1 (", round(attr(pc, "percentVar")[1], 1),"%)")) +
ylab(paste0("PC2 (", round(attr(pc, "percentVar")[2], 1),"%)"))
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Age)) +
geom_point() +
theme_classic() +
xlab(paste0("PC1 (", round(attr(pc, "percentVar")[1], 1),"%)")) +
ylab(paste0("PC2 (", round(attr(pc, "percentVar")[2], 1),"%)"))
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Sex)) +
geom_point() +
theme_classic() +
xlab(paste0("PC1 (", round(attr(pc, "percentVar")[1], 1),"%)")) +
ylab(paste0("PC2 (", round(attr(pc, "percentVar")[2], 1),"%)"))
ggplot(dfPCA, aes(x=pc1, y=pc2, col=SLE_status)) +
geom_point() +
theme_classic() +
xlab(paste0("PC1 (", round(attr(pc, "percentVar")[1], 1),"%)")) +
ylab(paste0("PC2 (", round(attr(pc, "percentVar")[2], 1),"%)"))
## technical variables
pBatch <- ggplot(dfPCA, aes(x=pc1, y=pc2, col=batch_cov)) +
geom_point() +
theme_classic() +
xlab(paste0("PC1 (", round(attr(pc, "percentVar")[1], 1),"%)")) +
ylab(paste0("PC2 (", round(attr(pc, "percentVar")[2], 1),"%)")) +
theme(legend.position = "bottom",
legend.text = element_text(size=5)) +
guides(colour = guide_legend(nrow=5, override.aes = list(size=1/2)))
pCohort <- ggplot(dfPCA, aes(x=pc1, y=pc2, col=Processing_Cohort)) +
geom_point() +
theme_classic() +
xlab(paste0("PC1 (", round(attr(pc, "percentVar")[1], 1),"%)")) +
ylab(paste0("PC2 (", round(attr(pc, "percentVar")[2], 1),"%)")) +
theme(legend.position = "bottom",
legend.text = element_text(size=8)) +
guides(colour = guide_legend(nrow=2))
dfPCA$nCells <- colSums(lupusCountMatAll)
pnCells <- ggplot(dfPCA, aes(x=pc1, y=pc2, col=nCells)) +
geom_point() +
scale_color_gradient2() +
theme_classic() +
xlab(paste0("PC1 (", round(attr(pc, "percentVar")[1], 1),"%)")) +
ylab(paste0("PC2 (", round(attr(pc, "percentVar")[2], 1),"%)"))+
theme(legend.position = "bottom",
legend.text = element_text(size=8))
pTechnicalPCA <- cowplot::plot_grid(pBatch, pCohort, pnCells,
nrow=1, labels=letters[1:3])
pTechnicalPCA
ggsave("../plots/230913_lupusCase_PCATechnical.pdf", width=19, height=11)
designAsian <- model.matrix(~SLE_status + Processing_Cohort, data=lupusMetaAsian)
v <- voomCLR(counts = lupusCountMatAsian,
design = designAsian,
lib.size = NULL,
plot = TRUE,
span=.8)
lupusCLRMatAsian <- v$E
library(scater)
pc <- calculatePCA(lupusCLRMatAsian,
ncomponents=2,
ntop=11)
dfPCA <- cbind(data.frame(pc1=pc[,1], pc2=pc[,2]), lupusMetaAsian)
dfPCA$Age <- as.numeric(dfPCA$Age)
ggplot(dfPCA, aes(x=pc1, y=pc2, col=group)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=batch_cov)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Age)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Sex)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=SLE_status)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Processing_Cohort)) +
geom_point()
designEuropean <- model.matrix(~SLE_status + Processing_Cohort, data=lupusMetaEuropean)
v <- voomCLR(counts = lupusCountMatEuropean,
design = designEuropean,
lib.size = NULL,
plot = TRUE,
span=.8)
lupusCLRMatEuropean <- v$E
library(scater)
pc <- calculatePCA(lupusCLRMatEuropean,
ncomponents=2,
ntop=11)
dfPCA <- cbind(data.frame(pc1=pc[,1], pc2=pc[,2]), lupusMetaEuropean)
dfPCA$Age <- as.numeric(dfPCA$Age)
ggplot(dfPCA, aes(x=pc1, y=pc2, col=group)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=batch_cov)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Age)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Sex)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=SLE_status)) +
geom_point()
ggplot(dfPCA, aes(x=pc1, y=pc2, col=Processing_Cohort)) +
geom_point()
table(table(droplevels(lupusMetaAll$ind_cov))) # 49+14+5=68 samples constituting 92 replicates
patientAll <- lupusMetaAll$ind_cov
designAll <- model.matrix(~SLE_status*pop_cov + Processing_Cohort, data=lupusMetaAll)
v <- voomCLR(counts = lupusCountMatAll,
design = designAll,
lib.size = NULL,
plot = TRUE,
span=.8)
cf <- duplicateCorrelation(v, designAll, block=patientAll)
v <- voomCLR(counts = lupusCountMatAll,
design = designAll,
lib.size = NULL,
block = patientAll,
correlation = cf$consensus,
span=.8)
cf <- duplicateCorrelation(v, designAll, block=patientAll)
fit <- lmFit(v, designAll,
block = patientAll,
correlation = cf$consensus)
fit <- lmFit(v, designAll)
plotBeta(fit)
fit <- applyBiasCorrection(fit)
fit <- eBayes(fit)
tt <- topTable(fit, coef="SLE_statusSLE", number=Inf)
tt
ttAsian <- tt
## linda
library(MicrobiomeStat)
library(phyloseq)
lindaRes <- LinDA::linda(otu.tab = lupusCountMatAll, # rows features, cols samples
meta = as.data.frame(lupusMetaAll),
formula = '~SLE_status*pop_cov + Processing_Cohort + (1|ind_cov)',
type = 'count',
adaptive=TRUE,
imputation = FALSE)
lindaRes$output$SLE_statusSLE[order(abs(lindaRes$output$SLE_statusSLE$stat), decreasing=TRUE),]
library(glmmTMB)
resDfNB <- data.frame(population=rownames(lupusCountMatAll),
diff=rep(NA,nrow(lupusCountMatAll)),
se=rep(NA,nrow(lupusCountMatAll)),
pval=rep(NA,nrow(lupusCountMatAll)))
for(pp in 1:nrow(lupusCountMatAll)){
curY <- lupusCountMatAll[pp,]
m_p <- glmmTMB(curY ~ -1 + designAll + (1|patientAll),
family=nbinom2(link="log"),
offset = log(colSums(lupusCountMatAll)))
resDfNB[pp,2:4] <- c(summary(m_p)$coef$cond["designAllSLE_statusSLE",c(1,2,4)])
}
resDfNB$padj <- p.adjust(resDfNB$pval, "fdr")
resDfNB[order(abs(resDfNB$pval)),]
allPopulations <- rownames(lupusCountMatAll)
nPopulations <- nrow(lupusCountMatAll)
allMethods <- c("voomCLR", "LinDA", "NBGLM")
nMethods <- length(allMethods)
resDfAll <- data.frame(population = rep(allPopulations, nMethods),
method = rep(allMethods, each=nPopulations),
log2FC = c(tt[allPopulations,]$logFC,
lindaRes$output$SLE_statusSLE[allPopulations,]$log2FoldChange,
log2(exp(resDfNB$diff))),
padj = c(tt[allPopulations,]$adj.P.Val,
lindaRes$output$SLE_statusSLE[allPopulations,]$padj,
log2(exp(resDfNB$padj)))
)
resDfAll$DA <- resDfAll$padj <= 0.05
daResAsian <- resDfAll
pCompFullAsian <- ggplot(resDfAll,
aes(x=population, y=method, color=log2FC, size=DA)) +
geom_point()+
facet_grid(~population, scales = "free_x", space = "free")+
theme_light()+
scale_color_gradient2(low= "blue", mid="gray", high= "red") +
theme(axis.text.x = element_text(angle=45, hjust = 1, vjust = 1),
strip.text.x = element_text(size=14, angle=90, hjust = 1, vjust = 1))
pCompFullAsian
patientAll <- lupusMetaAll$ind_cov
designAll <- model.matrix(~SLE_status*pop_cov + Processing_Cohort, data=lupusMetaAll)
v <- voomCLR(counts = lupusCountMatAll,
design = designAll,
lib.size = NULL,
plot = TRUE,
span=.8)
cf <- duplicateCorrelation(v, designAll, block=patientAll)
v <- voomCLR(counts = lupusCountMatAll,
design = designAll,
lib.size = NULL,
block = patientAll,
correlation = cf$consensus,
span=.8)
cf <- duplicateCorrelation(v, designAll, block=patientAll)
fit <- lmFit(v, designAll,
block = patientAll,
correlation = cf$consensus)
fit <- lmFit(v, designAll)
L <- matrix(0, nrow=ncol(fit$coefficients), ncol=1)
rownames(L) <- colnames(fit$coefficients)
L[c("SLE_statusSLE", "SLE_statusSLE:pop_covEuropean"),1] <- 1
conFit <- contrasts.fit(fit,
contrasts = L)
plotBeta(conFit)
conFit <- applyBiasCorrection(conFit)
conFit <- eBayes(conFit)
tt <- topTable(conFit, number=Inf)
tt
ttEuropean <- tt
## linda
#library(MicrobiomeStat)
library(phyloseq)
library(LinDA)
lindaRes <- LinDA::linda(otu.tab = lupusCountMatAll, # rows features, cols samples
meta = as.data.frame(lupusMetaAll),
formula = '~SLE_status*pop_cov + Processing_Cohort + (1|ind_cov)',
type = 'count',
adaptive=TRUE,
imputation = FALSE)
## code from developers on GitHub
alp1 <- lindaRes$output$SLE_statusSLE$log2FoldChange
se1 <- lindaRes$output$SLE_statusSLE$lfcSE
df1 <- lindaRes$output$SLE_statusSLE$df
alp3 <- lindaRes$output$`SLE_statusSLE:pop_covEuropean`$log2FoldChange
se3 <- lindaRes$output$`SLE_statusSLE:pop_covEuropean`$lfcSE
df3 <- lindaRes$output$`SLE_statusSLE:pop_covEuropean`$df
cov13 <- lindaRes$covariance$SLE_statusSLE$`SLE_statusSLE:pop_covEuropean`
stat_linDA <- (alp1+alp3) / (sqrt(se1^2+se3^2+2*cov13))
l2fc_linDA <- alp1+alp3
names(stat_linDA) <- names(l2fc_linDA) <- rownames(lindaRes$output$SLE_statusSLE)
pvalue_linDA <- 2 * pt(-abs(stat_linDA), (df1+df3)/2)
padj_linDA <- p.adjust(pvalue_linDA, method = 'BH')
library(glmmTMB)
library(multcomp)
resDfNB <- data.frame(population=rownames(lupusCountMatAll),
diff=rep(NA,nrow(lupusCountMatAll)),
se=rep(NA,nrow(lupusCountMatAll)),
pval=rep(NA,nrow(lupusCountMatAll)))
for(pp in 1:nrow(lupusCountMatAll)){
curY <- lupusCountMatAll[pp,]
m_p <- glmmTMB(curY ~ SLE_status*pop_cov + Processing_Cohort + (1|ind_cov),
data=lupusMetaAll,
family=nbinom2(link="log"),
offset = log(colSums(lupusCountMatAll)))
## contrast
L <- matrix(0, nrow=nrow(summary(m_p)$coef$cond), ncol=1)
rownames(L) <- rownames(summary(m_p)$coef$cond)
L[c("SLE_statusSLE", "SLE_statusSLE:pop_covEuropean"),1] <- 1
m_p_contrast <- glht(m_p,
linfct=t(L),
coef. = function(x) fixef(x)[["cond"]],
vcov. = function(x) vcov(x)[["cond"]],
df=NULL)
resDfNB[pp,2:4] <- c(summary(m_p_contrast)$test$coefficients,
summary(m_p_contrast)$test$sigma,
summary(m_p_contrast)$test$pvalues)
}
resDfNB$padj <- p.adjust(resDfNB$pval, "fdr")
resDfNB[order(abs(resDfNB$pval)),]
allPopulations <- rownames(lupusCountMatAll)
nPopulations <- nrow(lupusCountMatAll)
allMethods <- c("voomCLR", "LinDA", "NBGLM")
nMethods <- length(allMethods)
resDfAll <- data.frame(population = rep(allPopulations, nMethods),
method = rep(allMethods, each=nPopulations),
log2FC = c(tt[allPopulations,]$logFC,
l2fc_linDA[allPopulations],
log2(exp(resDfNB$diff))),
padj = c(tt[allPopulations,]$adj.P.Val,
padj_linDA[allPopulations],
log2(exp(resDfNB$padj)))
)
resDfAll$DA <- resDfAll$padj <= 0.05
daResEuropean <- resDfAll
pCompFullEuropean <- ggplot(resDfAll,
aes(x=population, y=method, color=log2FC, size=DA)) +
geom_point()+
facet_grid(~population, scales = "free_x", space = "free")+
theme_light()+
scale_color_gradient2(low= "blue", mid="gray", high= "red") +
theme(axis.text.x = element_text(angle=45, hjust = 1, vjust = 1),
strip.text.x = element_text(size=14, angle=90, hjust = 1, vjust = 1))
pCompFullEuropean
patientAll <- lupusMetaAll$ind_cov
designAll <- model.matrix(~SLE_status*pop_cov + Processing_Cohort, data=lupusMetaAll)
v <- voomCLR(counts = lupusCountMatAll,
design = designAll,
lib.size = NULL,
plot = TRUE,
span=.8)
cf <- duplicateCorrelation(v, designAll, block=patientAll)
v <- voomCLR(counts = lupusCountMatAll,
design = designAll,
lib.size = NULL,
block = patientAll,
correlation = cf$consensus,
span=.8)
cf <- duplicateCorrelation(v, designAll, block=patientAll)
fit <- lmFit(v, designAll,
block = patientAll,
correlation = cf$consensus)
fit <- lmFit(v, designAll)
plotBeta(fit)
fit <- applyBiasCorrection(fit)
fit <- eBayes(fit)
tt <- topTable(fit, coef="SLE_statusSLE:pop_covEuropean", number=Inf)
tt
ttInteraction <- tt
## linda
library(MicrobiomeStat)
library(phyloseq)
lindaRes <- LinDA::linda(otu.tab = lupusCountMatAll, # rows features, cols samples
meta = as.data.frame(lupusMetaAll),
formula = '~SLE_status*pop_cov + Processing_Cohort + (1|ind_cov)',
type = 'count',
adaptive=TRUE,
imputation = FALSE)
lindaRes$output$`SLE_statusSLE:pop_covEuropean`[order(abs(lindaRes$output$`SLE_statusSLE:pop_covEuropean`$stat), decreasing=TRUE),]
library(glmmTMB)
resDfNB <- data.frame(population=rownames(lupusCountMatAll),
diff=rep(NA,nrow(lupusCountMatAll)),
se=rep(NA,nrow(lupusCountMatAll)),
pval=rep(NA,nrow(lupusCountMatAll)))
for(pp in 1:nrow(lupusCountMatAll)){
curY <- lupusCountMatAll[pp,]
m_p <- glmmTMB(curY ~ -1 + designAll + (1|patientAll),
family=nbinom2(link="log"),
offset = log(colSums(lupusCountMatAll)))
resDfNB[pp,2:4] <- c(summary(m_p)$coef$cond["designAllSLE_statusSLE:pop_covEuropean",c(1,2,4)])
}
resDfNB$padj <- p.adjust(resDfNB$pval, "fdr")
resDfNB[order(abs(resDfNB$pval)),]
allPopulations <- rownames(lupusCountMatAll)
nPopulations <- nrow(lupusCountMatAll)
allMethods <- c("voomCLR", "LinDA", "NBGLM")
nMethods <- length(allMethods)
resDfAll <- data.frame(population = rep(allPopulations, nMethods),
method = rep(allMethods, each=nPopulations),
log2FC = c(tt[allPopulations,]$logFC,
lindaRes$output$`SLE_statusSLE:pop_covEuropean`[allPopulations,]$log2FoldChange,
log2(exp(resDfNB$diff))),
padj = c(tt[allPopulations,]$adj.P.Val,
lindaRes$output$`SLE_statusSLE:pop_covEuropean`[allPopulations,]$padj,
log2(exp(resDfNB$padj)))
)
resDfAll$DA <- resDfAll$padj <= 0.05
daResInteraction <- resDfAll
pCompInteraction <- ggplot(resDfAll,
aes(x=population, y=method, color=log2FC, size=DA)) +
geom_point()+
facet_grid(~population, scales = "free_x", space = "free")+
theme_light()+
scale_color_gradient2(low= "blue", mid="gray", high= "red") +
theme(axis.text.x = element_text(angle=45, hjust = 1, vjust = 1),
strip.text.x = element_text(size=14, angle=90, hjust = 1, vjust = 1))
pCompInteraction
cowplot::plot_grid(pCompFullAsian, pCompFullEuropean, pCompInteraction,
ncol=1, labels=letters[1:3])
ggsave("../plots/230822_lupusCase_allContrasts.pdf", width=12, height=15)
library(tidyverse)
lupusCountsLong <- readRDS("../data/230705_popCountsLong_individualBatchID.rds")
lupusCountsLong <- lupusCountsLong[lupusCountsLong$pop_cov %in% c("Asian", "European"),]
lupusCountsLong <- lupusCountsLong %>%
group_by(patient, group) %>%
mutate(totalCells = sum(nCells),
nCellTypes = n(),
geoMean = prod(nCells+1)^(1/nCellTypes),
CLR = log((nCells+1) / geoMean )) %>%
ungroup() %>%
mutate(fractionCells = nCells / totalCells)
head(lupusCountsLong)
ggplot(lupusCountsLong, aes(x=Age, y=CLR)) +
geom_point() +
facet_wrap(. ~ celltype)
lupusCountsLong$Age
lupusCountsLong$Age <- as.numeric(lupusCountsLong$Age)
ggplot(lupusCountsLong, aes(x=Age, y=CLR)) +
geom_point() +
facet_wrap(. ~ celltype, scales="free")
lupusCountsLong$SLE_status
ggplot(lupusCountsLong, aes(x=Age, y=CLR, col=SLE_status)) +
geom_point() +
facet_wrap(. ~ celltype, scales="free")
ggplot(lupusCountsLong, aes(x=Age, y=CLR, col=SLE_status)) +
geom_point() +
facet_wrap(. ~ celltype, scales="free") +
geom_smooth()
ggplot(lupusCountsLong, aes(x=Age, y=CLR, col=SLE_status)) +
geom_point() +
facet_wrap(. ~ celltype, scales="free") +
geom_smooth() +
theme_classic()
ggsave("plots/231109_CLRAgePerStatus.pdf", width=9, height=9)
