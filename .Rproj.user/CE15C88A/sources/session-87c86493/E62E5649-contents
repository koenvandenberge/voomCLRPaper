---
title: "INSIGHT scddPCR"
output:
  html_document: 
    number_sections: yes
    fig_caption: true
    toc: yes
    toc_float: yes 
    css: ./lib/stylesArial.css
    
params: 
  company: "Janssen Research & Development" 
  identifier: "INSIGHT interim analysis"
  protocol: NULL
  reportDate: "February 8, 2023"
  author: "Koen Van den Berge (KVande14@its.jnj.com)"
  recipient: "Marianne Tuefferd"

  endCode: FALSE    #TRUE/FALSE. TRUE: code will be printed at the end of the report, FALSE: only file location is printed at the end of the report
  RmdLocation: "/domino/edv/chbv-bm-single-cell/KVande/22/INSIGHT_EDA/R"
---

```{r logo, echo=FALSE}
# Add logo to the header
htmltools::img(src = knitr::image_uri(file.path("jsn_logo_color_rgb.png")), 
               alt = 'logo', 
               style = 'position: absolute; top:0; right:-5px; padding:10px; height: 125px; width: 210px')

library(knitr)
```



<!--- R system setup --->
```{r setup, message = FALSE, warning = FALSE, include=FALSE}
#use this block to set libraries, etc
#devtools::install_github("rstudio/rmarkdown")
library(kableExtra)
library(tidyverse)
library(pander)

## SETUP LOCATION
#setwd("/mnt/exports/shared/home/dputri/2019/2019-0542_Scoring system of neurotoxicology study/")

```



<!-------------------------- DO NOT MODIFY TEXT BELOW -------------------------------------> 
<!------------- The following ~30 lines are the first page of the report     --------------> 
<!------------- Any parameter modification should be down in the YAML header --------------> 
<!------------- You can add or delete  to fix title page spacing     --------------> 

<!-------------------------- DO NOT MODIFY TEXT BELOW -------------------------------------> 
<!------------- The following ~30 lines are the first page of the report ------------------> 
<!------------- Any parameter modification should be down in the YAML header --------------> 

<br> 
<br> 

<p id="head2"> `r params$company` </p>

<p id="head2"> `r params$reportName` </p>

***
<p id="head2"> `r params$identifier` </p>

***


<p>**Report Date:** `r params$reportDate`</p>

<p>**Prepared by:** `r params$author`</p>

<p>**Scientific Recipient:** `r params$recipient`</p>


***

<p id="confhead">Confidentiality Statement</p>

<p id="confbody">The information in this document contains trade secrets and commercial information that are privileged or confidential and may not be disclosed unless such disclosure is required by applicable law or regulations. In any event, persons to whom the information is disclosed must be informed that the information is privileged or confidential and may not be further disclosed by them. These restrictions on disclosure will apply equally to all future information supplied to you that is indicated as privileged or confidential.
</p>

<!------------- DO NOT MODIFY TEXT ABOVE THIS COMMENT ------------------> 


<!------------- DO NOT MODIFY FOLLOWING HEADINGS ------------------> 
<!------------- Enter text and code below       -------------------> 

```{r, eval=FALSE}
library(aws.s3)
AWS_S3_ENDPOINT <- "s3.amazonaws.com"

## after getting access keys, use https://github.com/cloudyr/aws.s3
Sys.setenv("AWS_ACCESS_KEY_ID" = "AKIAYPDGRXFHBH6Q4I6C",
           "AWS_SECRET_ACCESS_KEY" = "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",
           "AWS_DEFAULT_REGION" = "us-east-1")


filePath <- "HPB/OCEAN-JnJ-73763989/73763989HPB2003/liver-sc_ddPCR/processed/dcolomb1/INSIGHT SH_ASSAY DATABASE_backup20230109.xlsx"

bucketFiles <- get_bucket(bucket = "itx-acd-data-id",
prefix = "HPB/OCEAN-JnJ-73763989/73763989HPB2003/liver-sc_ddPCR/processed/dcolomb1/",
max=Inf)

  
readFile <- function(file, ...) openxlsx::read.xlsx(file, startRow = 3, ...)
data <- aws.s3::s3read_using(FUN = readFile,
                                  object = filePath,
                                  bucket = "itx-acd-data-id")
```

```{r}
file <- "../data/INSIGHT SH_ASSAY DATABASE_backup20230207.xlsx"
data <- openxlsx::read.xlsx(file, startRow = 3)
```



```{r}
library(ggh4x)

# rm vocabulary row and col
data <- data[-1,] 
data <- data[,-1]
## there's no data yet for some samples
table(data$Proccesing.order)
# one B failed
data <- data[!data$Proccesing.order %in% c("M"),]
data <- data[!(data$Proccesing.order == "B" & data$Date.of.picking == 44656),]
data <- data[!is.na(data$Proccesing.order),]

data$HBV.cccDNA.AMPLIFIED.1 <- as.numeric(data$HBV.cccDNA.AMPLIFIED.1)
data$HBV.cccDNA.AMPLIFIED.2 <- as.numeric(data$HBV.cccDNA.AMPLIFIED.2)
data$HBV.cccDNA.AMPLIFIED.Pooled <- as.numeric(data$HBV.cccDNA.AMPLIFIED.Pooled)
data$mito.DNA.AMPLIFIED.1 <- as.numeric(data$mito.DNA.AMPLIFIED.1)
data$mito.DNA.AMPLIFIED.2 <- as.numeric(data$mito.DNA.AMPLIFIED.2)
data$mito.DNA.AMPLIFIED.Pooled <- as.numeric(data$mito.DNA.AMPLIFIED.Pooled)
data$cccDNA.Binary.readout.1 <- as.numeric(data$cccDNA.Binary.readout.1)
data$cccDNA.Binary.readout.2 <- as.numeric(data$cccDNA.Binary.readout.2)
data$`cccDNA.Binary.readout.(pool)` <- as.numeric(data$`cccDNA.Binary.readout.(pool)`)
data$`cccDNA.Binary.readout.(binary.sum)` <- as.numeric(data$`cccDNA.Binary.readout.(binary.sum)`)
data$HBV.RNA <- as.numeric(data$HBV.RNA)
data$HBV.RNA.Binary.readout <- as.numeric(data$HBV.RNA.Binary.readout)
data$HBsAg.binary <- factor(data$HBsAg.binary)
data$HBsAg.Day.1 <- as.numeric(data$HBsAg.Day.1)
data$HBsAg.screening <- as.numeric(data$HBsAg.screening)
data$HBsAg.intensity <- as.numeric(data$HBsAg.intensity)
data$Visit.Week[data$Visit.Week == "W40"] <- "W 40"
data$Visit.Week <- factor(data$Visit.Week, levels=c("W -1", "W 40", "FU W 24"))
## some panel info is missing
data$Panel[data$Subject.ID == "100021"] <- "Panel2"
data$Panel[data$Subject.ID == "100006"] <- "Panel2"

log10sAgThresh <- 3.863971
data$sAgBinary <- log10(data$HBsAg.intensity) > log10sAgThresh
```

# Introduction to the dataset

In this dataset, we have eight patients which we (plan to) observe for each of two timepoints.
In each timepoint and for all patients, a core biopsy is taken, and 90 hepatocytes are picked. These 90 picks are taken using a needle and should correspond to, although not necessarily, the volume of a single hepatocyte. For convenience we will be referring to such a picked region as a single cell or hepatocyte. The hepatocytes are picked randomly, i.e., prior to any staining.

For the DNA and RNA assays, each of these 90 samples are then processed using single-cell digital droplet PCR (scddPCR) technology, where the sample corresponding to a picked hepatocyte is split into thousands of droplets, and in each of the droplets the presence of DNA or RNA is measured.

Due to amplification biases, the DNA measurement can only be interpreted as a binary variable, i.e., in each of the 90 single cells, HBV DNA is either absent or present.
In contrast, the RNA measurement is quantitative, and the number of HBV-RNA+ droplets provides a reliable proxy for RNA concentration quantification.

Due to this, we can summarize the DNA-based measurements as 'fraction of positive HBV-DNA hepatocytes' and use this for the analysis. Note however that the DNA quantification was performed twice, on two plates, for each hepatocyte. These are technical replicates, where an aliquot was taken from all samples.

For the RNA measurements, however, we will work with the single-hepatocyte data to avoid any information loss in attempting to summarize the data. Note that **there is a hierarchical correlation structure in the dataset**: 

 - The pseudoreplication within each patient $\times$ timepoint (the 90 hepatocytes are all from one patient);
  - The correlation over time within a patient. 
  
Due to this, we will create a random effect for each patient $\times$ time interaction, to account for the pseudoreplication. Since the contrast of interest can be assessed within patient, there is no need to also add a (nested) patient-specific random effect and a fixed time effect suffices. A fixed patient effect is also added to take into account the correlation between two timepoints taken on the same patient.


# HBV DNA

We note several observations:

 - cccDNA quantification is highly variable between technical replicates.
 - mtDNA quanitification, in contrast, is much more reproducible between technical replicates.
 - It seems like the second technical replicate is biased downwards relative to the first one. Could this be due to residue left in the well for sample 1, whereas the pipette exactly transfers the required amount in sample 2? Or maybe this doesn't matter as the measurement is a concentration and therefore already normalized for volume.

## EDA

### Basic characteristics

```{r}
# 90 cells per patient per sample
# for some patients multiple samples, due to second timepoint
table(data$Subject.ID, data$Visit.Week)
```


### HBV cccDNA


```{r}
hist(data$HBV.cccDNA.AMPLIFIED.1, breaks=40) 
hist(data$HBV.cccDNA.AMPLIFIED.2, breaks=40) 
hist(log1p(data$HBV.cccDNA.AMPLIFIED.1), breaks=40) 
hist(log1p(data$HBV.cccDNA.AMPLIFIED.2), breaks=40) 


plot(log1p(data$HBV.cccDNA.AMPLIFIED.1),
     log1p(data$HBV.cccDNA.AMPLIFIED.2),
     pch=16, cex=2/3)  ; abline(0,1,col="red")
plot(log1p(data$HBV.cccDNA.AMPLIFIED.1),
     log1p(data$HBV.cccDNA.AMPLIFIED.2),
     pch=16, cex=2/3,
     col=dayjob::colby(factor(data$`cccDNA.Binary.readout.(pool)`)))  ; abline(0,1,col="red")
plot(log1p(data$HBV.cccDNA.AMPLIFIED.1),
     log1p(data$HBV.cccDNA.AMPLIFIED.2),
     pch=16, cex=2/3, xlim=c(0,5), ylim=c(0,5),
     col=dayjob::colby(factor(data$`cccDNA.Binary.readout.(pool)`)))  ; abline(0,1,col="red")
```


### mtDNA

The mitochondrial DNA assay is much more reliable than the HBV DNA assay, given its reproducibility across technical replicates.

```{r}
hist(data$mito.DNA.AMPLIFIED.1, breaks=40) 
hist(data$mito.DNA.AMPLIFIED.2, breaks=40) 
hist(log1p(data$mito.DNA.AMPLIFIED.1), breaks=40) 
hist(log1p(data$mito.DNA.AMPLIFIED.2), breaks=40) 

plot(log1p(data$mito.DNA.AMPLIFIED.1),
     log1p(data$mito.DNA.AMPLIFIED.2),
     pch=16, cex=2/3)  ; abline(0,1,col="red")
```


### cccDNA and mtDNA

```{r}
plot(log1p(data$HBV.cccDNA.AMPLIFIED.1),
     log1p(data$mito.DNA.AMPLIFIED.1),
     pch=16, cex=2/3)  ; abline(0,1,col="red")
plot(log1p(data$HBV.cccDNA.AMPLIFIED.2),
     log1p(data$mito.DNA.AMPLIFIED.2),
     pch=16, cex=2/3)  ; abline(0,1,col="red")
plot(log1p(data$HBV.cccDNA.AMPLIFIED.Pooled),
     log1p(data$mito.DNA.AMPLIFIED.Pooled),
     pch=16, cex=2/3)  ; abline(0,1,col="red")
```


### HBV RNA

```{r}
hist(data$HBV.RNA, breaks=40) 
hist(log1p(data$HBV.RNA), breaks=40) 
table(data$HBV.RNA.Binary.readout)

plot(log1p(data$HBV.RNA),
     pch=16, cex=2/3, col=dayjob::colby(factor(data$HBV.RNA.Binary.readout)))
```


### HBV sAG

```{r}
table(data$HBsAg.binary)
hist(data$HBsAg.Day.1, breaks=40)
hist(data$HBsAg.screening, breaks=40)
# how to interpret this? Should I use the clinical data instead?
plot(data$HBsAg.Day.1, data$HBsAg.screening) ; abline(0,1,col="red")
hist(data$HBsAg.intensity) # on a cell level
```


## Binary calling

For the DNA measurement, each sample was measured twice. We thus have two technical replicates available. For each plate separately, we measure the DNA content and the mitochondrial content. A measurement is trustworthy as soon as enough mitochondrial content is observed in the sample. It therefore seems sufficient to trust a sample as soon as sufficient mito content is found in at least one technical replicate. This is the approach we will be using, here.

```{r}
mitoThreshold <- 1.6
trustyWells <- data$mito.DNA.AMPLIFIED.1 > mitoThreshold | data$mito.DNA.AMPLIFIED.2 > mitoThreshold
## results in more usable wells
table(trustyWells, useNA="always")
## while the pooling done by Daniele results in
table(!is.na(data$`cccDNA.Binary.readout.(pool)`), useNA="always")
table(!is.na(data$`cccDNA.Binary.readout.(binary.sum)`), useNA="always")

data$cccDNABinary <- as.numeric(data$HBV.cccDNA.AMPLIFIED.1 > mitoThreshold | data$HBV.cccDNA.AMPLIFIED.2 > mitoThreshold)
```

## Table

```{r}
dataTrust <- data[which(trustyWells==TRUE),]
propDNADf <- dataTrust %>% 
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(propDNACells=mean(cccDNABinary, na.rm=TRUE)*100)
propDNADf
write.csv(propDNADf, file="../data/propDNATable.csv",
          row.names = FALSE, quote = FALSE)
```


## Statistical analysis

In the statistical analysis, we summarize the cell-level data on a patient-level for each timepoint, by calculating the fraction of HBV DNA positive hepatocytes for each sample. Since this fraction is based on a different number of hepatocytes for each patient, these data are heteroscedastic, and we take this into account by using the number of cells each fraction is based on as a weight in the model.

We model the fraction of HBV DNA positive hepatocytes as a function of time, a binary variable representing baseline (W-1) and follow-up (W40) timepoints, and a patient effect, to account for the correlation of repeated measurements within patient over time. The data are overdispersed with respect to a Binomial model, as indicated by the overdispersion parameter below, and therefore we adopt a Beta-Binomial model for the analysis.

```{r}
library(ggplot2)
table(dataTrust$Subject.ID, dataTrust$Visit.Week)

# ggplot(dataTrust, aes(x=Visit.Week, y=cccDNABinary, fill=Subject.ID)) +
#   geom_boxplot() +
#   theme_classic()

dataTrustSumm <- dataTrust %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(fracPositive = mean(cccDNABinary, na.rm=TRUE),
            nCells = n())

ggplot(dataTrustSumm, aes(x=Visit.Week, y=fracPositive)) +
  geom_boxplot() +
  geom_point() +
  theme_classic()

ggplot(dataTrustSumm, aes(x=Visit.Week, y=fracPositive, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction cccDNA positive hepatocytes")

ggplot(dataTrustSumm, aes(x=Visit.Week, y=fracPositive, fill=Subject.ID, col=Subject.ID)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction cccDNA positive hepatocytes") +
  facet_wrap(.~Panel)

library(glmmTMB)
# mBin <- glmmTMB(fracPositive ~ Visit.Week + Subject.ID,
#                   family = "binomial",
#                 weights = nCells,
#                 data = dataTrustSumm)
# summary(mBin)


mBB <- glmmTMB(fracPositive ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustSumm)
summary(mBB)
sigma(mBB)
```




# HBV RNA

## EDA

As was suggested by Daniele, we use a threshold of 10K assessed droplets per hepatocyte at minimum.

```{r}
data$Droplet.number.RNA.plate <- as.numeric(data$Droplet.number.RNA.plate)
range(data$Droplet.number.RNA.plate, na.rm=TRUE)

## total droplets observed
hist(data$Droplet.number.RNA.plate, breaks=40,
     xlab = "Total RNA droplets assessed", main="")
abline(v=10e3, col="orange", lwd=2, lty=2)
## filter on total droplets
dataRNA <- data[data$Droplet.number.RNA.plate > 10e3,]
dataRNA$HBV.droplets <- as.numeric(dataRNA$HBV.droplets)
dataRNA$mito.droplets <- as.numeric(dataRNA$mito.droplets)


## number of positive HBV RNA droplets
hist(dataRNA$HBV.droplets, breaks=40, xlab="Nr of HBV-RNA(+) droplets", main="")
hist(log1p(dataRNA$HBV.droplets), breaks=40, xlab="log(nr of HBV-RNA(+) droplets + 1)", main="")
hist(dataRNA$HBV.droplets / dataRNA$Droplet.number.RNA.plate, 
     breaks=490, xlim=c(0,0.05),
     xlab="Fraction of HBV-RNA(+) droplets", main="")


## QC: mito droplets
hist(dataRNA$mito.droplets, breaks=40, main="", 
     xlab="Number of droplets with human mitochondrial RNA")
hist(log1p(dataRNA$mito.droplets), main="", 
     xlab="log(number of droplets with human mitochondrial RNA + 1)")
abline(v=log1p(1), col="red", lwd=2, lty=2)

## number of HBV+ droplets as a function of binary read-out caluclated by Daniele.
boxplot(log1p(dataRNA$HBV.droplets) ~ dataRNA$HBV.RNA.Binary.readout,
        xlab="HBV RNA binary readout", ylab="log(nr of HBV-RNA+ droplets + 1)")

```



## Statistical analysis

In contrast to the binary DNA measurements, the RNA measurements are quantitative and the actual number of positive HBV-RNA droplets are useful to model as they are unaffected by PCR bias. We therefore model the cell-level data and, for each hepatocyte, model the number of positive droplets with the number of total RNA droplets used as offset, using a Beta-Binomial model. 

We account for pseudoreplication of single cells within each sample through random effects for each patient $\times$ timepoint level. We add a fixed effect of time (Visit) to accommodate the two timepoints. A fixed patient effect is also added to take into account the correlation between two timepoints taken on the same patient.

### Droplet level

```{r}
dataRNA$patientTime <- paste0(dataRNA$Subject.ID, dataRNA$Visit.Week)
dataRNA <- dataRNA[!dataRNA$patientTime == "NANA",]
## require at least 1 mito droplet
dataRNA <- dataRNA[dataRNA$mito.droplets >= 1,]
table(dataRNA$patientTime)

mBBRNA <- glmmTMB(cbind(HBV.droplets, Droplet.number.RNA.plate - HBV.droplets) ~
              Visit.Week + Subject.ID + (1|patientTime), 
             data = dataRNA,
             family = betabinomial(link = "logit"))
summary(mBBRNA)
sigma(mBBRNA)
```

#### Within panel 1

```{r}
## effect within panel 1
dataRNA1 <- dataRNA[dataRNA$Panel == "Panel1",]
mBBRNA1 <- glmmTMB(cbind(HBV.droplets, Droplet.number.RNA.plate - HBV.droplets) ~
              Visit.Week + Subject.ID + (1|patientTime), 
             data = dataRNA1,
             family = betabinomial(link = "logit"))
summary(mBBRNA1)
```

#### Within panel 2

```{r}
## effect within panel 2
dataRNA2 <- dataRNA[dataRNA$Panel == "Panel2",]
mBBRNA2 <- glmmTMB(cbind(HBV.droplets, Droplet.number.RNA.plate - HBV.droplets) ~
              Visit.Week + Subject.ID + (1|patientTime), 
             data = dataRNA2,
             family = betabinomial(link = "logit"))
summary(mBBRNA2)
```

#### Alternative model

```{r}
mBBRNA_nested <- glmmTMB(cbind(HBV.droplets, Droplet.number.RNA.plate - HBV.droplets) ~
              Visit.Week + (1|Subject.ID/Visit.Week), 
             data = dataRNA,
             family = betabinomial(link = "logit"))

summary(mBBRNA_nested)
```

```{r}
dataRNA$RNABinary <- dataRNA$HBV.RNA >= 1.6

propRNADf <- dataRNA %>% 
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(propRNACells=mean(RNABinary, na.rm=TRUE)*100)
propRNADf
write.csv(propRNADf, file="../data/propRNATable.csv",
          row.names = FALSE, quote = FALSE)
```

### Hepatocyte level: on RNA counts

Note that the `HBV.RNA` column represents the estimated number of HBV-RNA molecules for a 20 $\mu$l reaction (which is the volume used for the RNA assay). This volume is split into droplets and the number of positive droplets is stored in `HBV.droplets`. As shown below, these two variables therefore have a positive linear correlation.

```{r}
plot(dataRNA$HBV.droplets, dataRNA$HBV.RNA) ; abline(0,1,col="red")
```

While both variables include very similar information, we will here also repeat the analysis on the `HBV.RNA` variable. Note that here we are not taking into account the number of droplets per sample as the response here is an estimated count for a fixed concentration volume.

```{r}
mNBRNA <- glmmTMB(HBV.RNA ~
              Visit.Week + Subject.ID + (1|patientTime), 
             data = dataRNA,
             family = nbinom2(link = "log"))
summary(mNBRNA)
sigma(mNBRNA)
```

#### Alternative model

```{r}
mNBRNA_nested <- glmmTMB(HBV.RNA ~
              Visit.Week + (1|Subject.ID/Visit.Week), 
             data = dataRNA,
             family = nbinom2(link = "log"))
summary(mNBRNA_nested)
```

#### Within panel 1

```{r}
## effect of panel 1
mNBRNA1 <- glmmTMB(HBV.RNA ~
              Visit.Week + Subject.ID + (1|patientTime), 
             data = dataRNA1,
             family = nbinom2(link = "log"))
summary(mNBRNA1)
```

#### Within panel 2

```{r}
## for panel 2
mNBRNA2 <- glmmTMB(HBV.RNA ~
              Visit.Week + Subject.ID + (1|patientTime), 
             data = dataRNA2,
             family = nbinom2(link = "log"))
summary(mNBRNA2)
```


### Hepatocyte level: on fraction HBV-RNA+ hepatocytes

```{r}
dataTrustSumm <- dataRNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(fracPositive = mean(RNABinary, na.rm=TRUE),
            nCells = n())
dataTrustSumm$patientTime <- paste0(dataTrustSumm$Subject.ID, dataTrustSumm$Visit.Week)
```


```{r}
mBBRNA <- glmmTMB(fracPositive ~
              Visit.Week + Subject.ID, 
             data = dataTrustSumm,
             family = betabinomial(link = "logit"),
             weight=nCells)
summary(mBBRNA)
sigma(mBBRNA)
```


#### Within panel 1

```{r}
dataTrustSumm1 <- dataTrustSumm[dataTrustSumm$Panel=="Panel1",]
## effect of panel 1
mBBRNA1 <- glmmTMB(fracPositive ~
              Visit.Week + Subject.ID, 
             data = dataTrustSumm1,
             family = betabinomial(link = "logit"),
             weight = nCells)
summary(mBBRNA1)
```

#### Within panel 2

```{r}
dataTrustSumm2 <- dataTrustSumm[dataTrustSumm$Panel=="Panel2",]
## effect of panel 2
mBBRNA2 <- glmmTMB(fracPositive ~
              Visit.Week + Subject.ID, 
             data = dataTrustSumm2,
             family = betabinomial(link = "logit"),
             weight = nCells)
summary(mBBRNA2)
```

## Visualization {.tabset}

### Droplet-level

```{r}
boxplot((HBV.droplets+1)/Droplet.number.RNA.plate ~ Visit.Week,
        data = dataRNA,
        xlab = "Visit Week",
        ylab="Fraction HBV-RNA(+) droplets")

boxplot(log((HBV.droplets+1)/Droplet.number.RNA.plate) ~ Visit.Week,
        data = dataRNA,
        xlab = "Visit Week",
        ylab="log[(HBV-RNA(+) droplets+1) / total RNA droplets]")

boxplot(HBV.RNA.Binary.readout ~ Visit.Week,
        data = dataRNA,
        xlab = "Visit Week",
        ylab="Fraction HBV-RNA+ hepatocytes")


```


### Hepatocyte-level

```{r}

dataTrustSumm

ggplot(dataTrustSumm, aes(x=Visit.Week, y=fracPositive)) +
  geom_boxplot() +
  geom_point() +
  theme_classic() +
  ylab("Fraction HBV-RNA+ hepatocytes")

ggplot(dataTrustSumm, aes(x=Visit.Week, y=fracPositive, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction HBV-RNA+ hepatocytes")

ggplot(dataTrustSumm, aes(x=Visit.Week, y=fracPositive, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction HBV-RNA+ hepatocytes") +
  facet_wrap(.~Panel)


dataRNA$fracHBVRNADroplets <- dataRNA$HBV.droplets / dataRNA$Droplet.number.RNA.plate

ggplot(dataRNA, aes(x=Visit.Week, y=fracHBVRNADroplets, fill=Subject.ID)) +
  geom_boxplot() +
  theme_classic() +
  ylab("Fraction RNA+ droplets")

logit <- function(x) log(x/(1-x))

ggplot(dataRNA, aes(x=Visit.Week, y=logit(fracHBVRNADroplets), fill=Subject.ID)) +
  geom_boxplot() +
  theme_classic() +
  ylab("Log fraction RNA+ droplets")

# expit <- function(x) exp(x) / (1 + exp(x))
# dataRNA$yhat <- expit(predict(mBBRNA))
# dataRNA
```

### RNA counts

```{r}
boxplot(HBV.RNA ~ Visit.Week,
        data = dataRNA,
        xlab = "Visit Week",
        ylab="Number of RNA copies")

boxplot(log1p(HBV.RNA) ~ Visit.Week,
        data = dataRNA,
        xlab = "Visit Week",
        ylab="log[Number of HBV-RNA copies +1]")


ggplot(dataRNA, aes(x=Visit.Week, y=log1p(HBV.RNA), fill=Subject.ID)) +
  geom_violin() +
  theme_classic() +
  facet_wrap(.~Panel, scales="free_x") +
  ylab("Log HBV-RNA copies + 1") +
  xlab("Visit")

dataRNA$sAgBinaryPlot <- ifelse(dataRNA$sAgBinary == TRUE, "HBsAg+", "HBsAg-")
ggplot(dataRNA, aes(x=Visit.Week, y=log1p(HBV.RNA), fill=Subject.ID)) +
  geom_violin() +
  theme_classic() +
  facet_nested(.~Panel+sAgBinaryPlot, scales="free_x") +
  ylab("Log HBV-RNA copies + 1") +
  xlab("Visit")

knitr::kable(dataRNA %>%
  group_by(Visit.Week, Panel, sAgBinaryPlot) %>%
  summarize(nCells=n()))

ggplot(dataRNA, aes(x=Visit.Week, y=log1p(HBV.RNA), fill=Subject.ID)) +
  geom_violin() +
  theme_classic() +
  facet_nested(.~Visit.Week+Panel, scales="free_x") +
  ylab("Log HBV-RNA copies + 1") +
  xlab("Visit")

ggplot(dataRNA, aes(x=Visit.Week, y=log1p(HBV.RNA), fill=Subject.ID)) +
  geom_violin() +
  theme_classic() +
  facet_nested(.~Panel+Visit.Week, scales="free_x") +
  ylab("Log HBV-RNA copies + 1") +
  xlab("Visit")
```

## Table

```{r}
dataRNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(medianRNACount = median(HBV.RNA),
            medianLogRNACount = median(log1p(HBV.RNA)),
            minRNACount=min(HBV.RNA),
            maxRNACount=max(HBV.RNA))
```


# Joint distribution of HBV RNA and HBV DNA

## DNA + and RNA +

```{r}
data$RNABinary <- data$HBV.RNA > mitoThreshold
trustyWellDNA <- data$mito.DNA.AMPLIFIED.1 > mitoThreshold | data$mito.DNA.AMPLIFIED.2 > mitoThreshold
trustyWellRNA <- data$mito.RNA > mitoThreshold
table(trustyWellDNA & trustyWellRNA)

## need to have reliable information both in DNA and RNA
dataTrustDNARNA <- data[(trustyWellDNA & trustyWellRNA),]
dataTrustDNARNA <- dataTrustDNARNA[!is.na(dataTrustDNARNA$Visit.Week),]
dataTrustDNARNA$Visit.Week <- droplevels(factor(dataTrustDNARNA$Visit.Week))

table(dataTrustDNARNA$Subject.ID, dataTrustDNARNA$Visit.Week, useNA="ifany")



dataTrustDNARNASumm <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(fracPositiveDNA = mean(cccDNABinary, na.rm=TRUE),
            fracPositiveRNA = mean(RNABinary, na.rm=TRUE),
            fracPositiveDNARNA = mean(as.logical(cccDNABinary) & RNABinary, na.rm=TRUE),
            nCells = n())

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA)) +
  geom_boxplot() +
  geom_point() +
  theme_classic() +
  ylab("Fraction of cccDNA+/HBV-RNA+ hepatocytes")

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of cccDNA+/HBV-RNA+ hepatocytes")


ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of cccDNA+/HBV-RNA+ hepatocytes") +
  facet_wrap(.~Panel)

library(glmmTMB)
# mBin <- glmmTMB(fracPositive ~ Visit.Week + Subject.ID,
#                   family = "binomial",
#                 weights = nCells,
#                 data = dataTrustSumm)
# summary(mBin)


mBB <- glmmTMB(fracPositiveDNARNA ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm)
summary(mBB)
sigma(mBB)
```

### Effect for panel 1

```{r}
dataTrustDNARNASumm1 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel1",]
mBB1 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm1)
summary(mBB1)
```

### Effect for panel 2

```{r}
dataTrustDNARNASumm2 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel2",]
mBB2 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm2)
summary(mBB2)
```



## DNA + and RNA -

```{r}
dataTrustDNARNASumm <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(fracPositiveDNA = mean(cccDNABinary, na.rm=TRUE),
            fracPositiveRNA = mean(RNABinary, na.rm=TRUE),
            fracPositiveDNARNA = mean((cccDNABinary == 1) & (RNABinary==FALSE), na.rm=TRUE),
            nCells = n())

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA)) +
  geom_boxplot() +
  geom_point() +
  theme_classic() +
  ylab("Fraction of cccDNA+/HBV-RNA- hepatocytes")

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of cccDNA+/HBV-RNA- hepatocytes")

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of DNA+/HBV-RNA- hepatocytes") +
  facet_wrap(.~Panel)

library(glmmTMB)

mBB <- glmmTMB(fracPositiveDNARNA ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm)
summary(mBB)
sigma(mBB)
```


### Effect for panel 1

```{r}
dataTrustDNARNASumm1 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel1",]
mBB1 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm1)
summary(mBB1)
```

### Effect for panel 2

```{r}
dataTrustDNARNASumm2 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel2",]
mBB2 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm2)
summary(mBB2)
```

## DNA - and RNA +

```{r}
dataTrustDNARNASumm <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(fracPositiveDNA = mean(cccDNABinary, na.rm=TRUE),
            fracPositiveRNA = mean(RNABinary, na.rm=TRUE),
            fracPositiveDNARNA = mean((cccDNABinary == 0) & (RNABinary==TRUE), na.rm=TRUE),
            nCells = n())

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA)) +
  geom_boxplot() +
  geom_point() +
  theme_classic() +
  ylab("Fraction of cccDNA-/HBV-RNA+ hepatocytes")

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of cccDNA-/HBV-RNA+ hepatocytes")

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of cccDNA-/HBV-RNA+ hepatocytes") +
  facet_wrap(.~Panel)

library(glmmTMB)

mBB <- glmmTMB(fracPositiveDNARNA ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm)
summary(mBB)
sigma(mBB)
```


### Effect for panel 1

```{r}
dataTrustDNARNASumm1 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel1",]
mBB1 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm1)
summary(mBB1)
```

### Effect for panel 2

```{r}
dataTrustDNARNASumm2 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel2",]
mBB2 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm2)
summary(mBB2)
```

## DNA - and RNA -

```{r}
dataTrustDNARNASumm <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(fracPositiveDNA = mean(cccDNABinary, na.rm=TRUE),
            fracPositiveRNA = mean(RNABinary, na.rm=TRUE),
            fracPositiveDNARNA = mean((cccDNABinary == 0) & (RNABinary==FALSE), na.rm=TRUE),
            nCells = n())

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA)) +
  geom_boxplot() +
  geom_jitter(height=0, width=.1) +
  theme_classic() +
  ylab("Fraction of cccDNA-/HBV-RNA- hepatocytes")


ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_point() +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of cccDNA-/HBV-RNA- hepatocytes") +
  facet_wrap(.~Panel)

ggplot(dataTrustDNARNASumm, aes(x=Visit.Week, y=fracPositiveDNARNA, fill=Subject.ID, col=Subject.ID, shape=Panel)) +
  geom_jitter(height=0, width=.1) +
  geom_line(aes(group=Subject.ID)) +
  theme_classic() +
  ylab("Fraction of cccDNA-/HBV-RNA- hepatocytes") +
  facet_wrap(.~Panel)

library(glmmTMB)

mBB <- glmmTMB(fracPositiveDNARNA ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm)
summary(mBB)
sigma(mBB)
```


### Effect for panel 1

```{r}
dataTrustDNARNASumm1 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel1",]
mBB1 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm1)
summary(mBB1)
```

### Effect for panel 2

```{r}
dataTrustDNARNASumm2 <- dataTrustDNARNASumm[dataTrustDNARNASumm$Panel == "Panel2",]
mBB2 <- glmmTMB(fracPositiveDNARNA ~ Visit.Week+Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNASumm2)
summary(mBB2)
```

## All combined

```{r}
dataTrustDNARNASummAll <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(dnaPosRnaPos=mean(as.logical(cccDNABinary) & RNABinary, na.rm=TRUE),
            dnaPosRnaNeg=mean(as.logical(cccDNABinary) & RNABinary==FALSE, na.rm=TRUE),
            dnaNegRnaPos=mean(as.logical(cccDNABinary)==FALSE & RNABinary, na.rm=TRUE),
            dnaNegRnaNeg=mean(as.logical(cccDNABinary)==FALSE & RNABinary==FALSE, na.rm=TRUE),
            nCells = n())

dataTrustDNARNASummAllLong <- tidyr::pivot_longer(dataTrustDNARNASummAll,
                    cols=colnames(dataTrustDNARNASummAll)[4:7],
                    names_to="status",
                    values_to="fraction")


ggplot(dataTrustDNARNASummAllLong, aes(fill=status, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_wrap(~Visit.Week) + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5))

ggplot(dataTrustDNARNASummAllLong, aes(fill=status, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_wrap(.~Visit.Week) + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5))

dataTrustDNARNASummAllLong$status <- factor(dataTrustDNARNASummAllLong$status,
                                            levels=c("dnaPosRnaPos", "dnaNegRnaPos",
                                                     "dnaPosRnaNeg", "dnaNegRnaNeg"),
                                            labels = c("cccDNA+/RNA+", "cccDNA-/RNA+",
                                                       "cccDNA+/RNA-", "cccDNA-/RNA-"))
cols <- c("cccDNA+/RNA+"="darkblue",
          "cccDNA-/RNA+"="steelblue",
          "cccDNA+/RNA-"="burlywood2",
          "cccDNA-/RNA-"="antiquewhite2")
## emphasizes panel difference
ggplot(dataTrustDNARNASummAllLong, aes(fill=status, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Visit.Week+Panel, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1))

## emphasizes time effect
ggplot(dataTrustDNARNASummAllLong, aes(fill=status, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Visit.Week, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1))


## per patient
ggplot(dataTrustDNARNASummAllLong, aes(fill=status, y=fraction, x=Visit.Week)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Subject.ID, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1))
  
```

# sAG

## EDA

### sAG vs HBV DNA

Threshold on cytoplasmic HBsAg provided by Marianne.

```{r, eval=TRUE}
plot(density(log10(data$HBsAg.intensity[which(data$cccDNABinary == 0)])), 
     col="orange", lwd=2, main="log10 sAG intensity as function of HBV DNA",
     bty="l", xlab = "sAg intensity")
lines(density(log10(data$HBsAg.intensity[which(data$cccDNABinary == 1)])),
      col="darkseagreen3", lwd=2)
legend("topright", c("HBV DNA -", "HBV DNA +", "sAg threshold"), lty=1, col=c("orange", "darkseagreen3", "red"),
       bty='n', lwd=2)
abline(v=log10sAgThresh, col="red")

dataTrust$cccDNABinary2 <- dataTrust$cccDNABinary
dataTrust$cccDNABinary2[dataTrust$cccDNABinary2==0] <- "cccDNA-"
dataTrust$cccDNABinary2[dataTrust$cccDNABinary2==1] <- "cccDNA+"
dataTrust$sAgBinary2 <- dataTrust$sAgBinary
dataTrust$sAgBinary2[dataTrust$sAgBinary2==FALSE] <- "HBsAg-"
dataTrust$sAgBinary2[dataTrust$sAgBinary2==TRUE] <- "HBsAg+"
dataTrustDNAsAg <- dataTrust %>% 
  filter(!is.na(cccDNABinary)) %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  count(., cccDNABinary2, sAgBinary2) %>%
  mutate(nCells=sum(n),
         fraction=n/nCells) %>%
  mutate(status=paste(cccDNABinary2, sAgBinary2,sep="/"))


cols <- c("cccDNA-/HBsAg-"="peru",
          "cccDNA-/HBsAg+"="palegreen2",
          "cccDNA+/HBsAg-"="salmon4",
          "cccDNA+/HBsAg+"="olivedrab3")
## emphasizes panel difference
ggplot(dataTrustDNAsAg, aes(fill=status, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Visit.Week+Panel, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1))

## emphasizes time effect
ggplot(dataTrustDNAsAg, aes(fill=status, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Visit.Week, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1))


## per patient
ggplot(dataTrustDNAsAg, aes(fill=status, y=fraction, x=Visit.Week)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Subject.ID, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1))
```

### sAG vs HBV RNA

```{r, eval=TRUE}
plot(density(log10(dataRNA$HBsAg.intensity[which(dataRNA$RNABinary == 0)])), 
     col="orange", lwd=2, main="sAG intensity as function of HBV RNA",
     bty="l", xlab = "sAg intensity")
lines(density(log10(dataRNA$HBsAg.intensity[which(dataRNA$RNABinary == 1)])),
      col="darkseagreen3", lwd=2)
legend("topright", c("HBV RNA -", "HBV RNA +", "sAg threshold"), lty=1, col=c("orange", "darkseagreen3", "red"),
       bty='n', lwd=2)
abline(v=log10sAgThresh, col="red")

### quantitative
plot(y=dataRNA$HBsAg.intensity, x=dataRNA$HBV.RNA,
        xlab="Estimated number of HBV-RNA molecules", ylab="log sAg intensity",
     pch=16, cex=1/2, bty='l', log="xy")
plot(y=log10(dataRNA$HBsAg.intensity), x=logit(dataRNA$fracHBVRNADroplets),
        xlab="logit(Fraction HBV RNA+ droplets)", ylab="log10 sAg intensity",
     pch=16, cex=1/2, bty='l')

### binary / binary
sAgRNA <- vector(length=nrow(dataRNA))
sAgRNA[dataRNA$RNABinary == FALSE & dataRNA$sAgBinary == FALSE] <- "HBV-RNA-/sAg-"
sAgRNA[dataRNA$RNABinary == FALSE & dataRNA$sAgBinary == TRUE] <- "HBV-RNA-/sAg+"
sAgRNA[dataRNA$RNABinary == TRUE & dataRNA$sAgBinary == FALSE] <- "HBV-RNA+/sAg-"
sAgRNA[dataRNA$RNABinary == TRUE & dataRNA$sAgBinary == TRUE] <- "HBV-RNA+/sAg+"
dataRNA$sAgRNA <- factor(sAgRNA, levels = c("HBV-RNA+/sAg+", "HBV-RNA-/sAg+",
                                            "HBV-RNA+/sAg-", "HBV-RNA-/sAg-"))
dataRNAsAg <- dataRNA %>%
  group_by(Subject.ID, Visit.Week, Panel, sAgRNA) %>%
  summarize(nCells = n()) %>%
  ungroup() %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  mutate(totalCells = sum(nCells),
         fraction = nCells / totalCells)
cols <- c("HBV-RNA-/sAg-"="peru",
          "HBV-RNA-/sAg+"="palegreen2",
          "HBV-RNA+/sAg-"="salmon4",
          "HBV-RNA+/sAg+"="olivedrab3")
## emphasizes panel difference
ggplot(dataRNAsAg, aes(fill=sAgRNA, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Visit.Week+Panel, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="sAg / HBV-RNA"))

## emphasizes time difference
ggplot(dataRNAsAg, aes(fill=sAgRNA, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Visit.Week, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="sAg / HBV-RNA"))

## per patient
ggplot(dataRNAsAg, aes(fill=sAgRNA, y=fraction, x=Visit.Week)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Subject.ID, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="HBsAg / HBV-RNA"))
```

## Correlating decrease in sAG with images

```{r}
imageResults <- data.frame(Subject.ID=c("100004", "100004",
                                     "100007", "100007",
                                     "100016", "100016",
                                     "100011", "100011",
                                     "100006", "100006",
                                     "1000021", "1000021",
                                     "100008", "100008"),
                           Panel=c("Panel1", "Panel1",
                                   "Panel1", "Panel1",
                                   "Panel1", "Panel1",
                                   "Panel1", "Panel1",
                                   "Panel2", "Panel2",
                                   "Panel2", "Panel2",
                                   "Panel2", "Panel2"),
                           Visit.Week=c("W -1", "W 40",
                                  "W -1", "W 40",
                                  "W -1", "W 40",
                                  "W -1", "W 40",
                                  "W -1", "W 40",
                                  "W -1", "W 40",
                                  "W -1", "W 40"),
                           sAgImage=c(98.4, 0.03,
                                      58.7, 0,
                                      86.2, 0.08,
                                      50.8, 0.01,
                                      49.5, 0.02,
                                      19.5, 0.04,
                                      17.4, 1.5))



datasAgddPCR <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(sAgCellsProp=mean(sAgBinary)*100)
datasAgddPCR <- datasAgddPCR[datasAgddPCR$Visit.Week %in% c("W -1", "W 40"),]
datasAgddPCR <- datasAgddPCR[!datasAgddPCR$Subject.ID == "100003",]

mergedsAg <- merge(datasAgddPCR, imageResults)
plot(mergedsAg$sAgCellsProp, mergedsAg$sAgImage,
     xlab="Proportion HBsAg+ cells (scddPCR)",
     ylab="Proportion HBsAg+ cells (image)") ; abline(0,1,col="red")
```



# DNA / RNA / sAg combinations

```{r}
dnaRnasAg <- vector(length=nrow(dataTrustDNARNA))
dnaRnasAg[] <- "other"
dnaRnasAg[which(dataTrustDNARNA$cccDNABinary==1 & dataTrustDNARNA$RNABinary==1 & dataTrustDNARNA$HBsAg.binary=="HBsAg positive")] <- "cccDNA+/HBV-RNA+/HBsAg+"
dnaRnasAg[which(dataTrustDNARNA$cccDNABinary==1 & dataTrustDNARNA$RNABinary==1 & dataTrustDNARNA$HBsAg.binary=="HBsAg negative")] <- "cccDNA+/HBV-RNA+/HBsAg-"
dnaRnasAg[which(dataTrustDNARNA$cccDNABinary==0 & dataTrustDNARNA$RNABinary==0 & dataTrustDNARNA$HBsAg.binary=="HBsAg negative")] <- "cccDNA-/HBV-RNA-/HBsAg-"
dataTrustDNARNA$dnaRnasAg <- factor(dnaRnasAg, levels = c("cccDNA+/HBV-RNA+/HBsAg+", "other",
                                            "cccDNA+/HBV-RNA+/HBsAg-", "cccDNA-/HBV-RNA-/HBsAg-"))
dataTrustDNARNA2 <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel, dnaRnasAg) %>%
  summarize(nCells = n()) %>%
  ungroup() %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  mutate(totalCells = sum(nCells),
         fraction = nCells / totalCells)

cols <- c("cccDNA+/HBV-RNA+/HBsAg+"="green3",
          "other"="darkolivegreen3",
          "cccDNA+/HBV-RNA+/HBsAg-"="darkseagreen2",
          "cccDNA-/HBV-RNA-/HBsAg-"="bisque1")
## emphasizes panel difference
ggplot(dataTrustDNARNA2, aes(fill=dnaRnasAg, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Visit.Week+Panel, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="cccDNA/HBV RNA/HBsAg"))

## emphasizes time difference
ggplot(dataTrustDNARNA2, aes(fill=dnaRnasAg, y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Visit.Week, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="cccDNA/HBV RNA/HBsAg"))

## per patient
ggplot(dataTrustDNARNA2, aes(fill=dnaRnasAg, y=fraction, x=Visit.Week)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Subject.ID, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  scale_fill_manual(values=cols) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="cccDNA/HBV RNA/HBsAg"))




```

# Plot of non-infected cells like JCI paper

## HBV DNA colored

```{r}
infectedCell <- vector(length=nrow(dataTrustDNARNA))
infectedCell[] <- 1
infectedCell[which(dataTrustDNARNA$cccDNABinary==0 & dataTrustDNARNA$RNABinary==0 & dataTrustDNARNA$HBsAg.binary=="HBsAg negative")] <- 0
dataTrustDNARNA$infectedCell <- infectedCell

dataTrustDNARNAInfect <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel, infectedCell) %>%
  summarize(nCells = n()) %>%
  ungroup() %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  mutate(totalCells = sum(nCells),
         fraction = nCells / totalCells)

## emphasizes time difference
ggplot(dataTrustDNARNAInfect, aes(fill=factor(infectedCell), y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Visit.Week, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="Infected cell status"))


dataTrustDNARNAInfect2 <- dataTrustDNARNAInfect %>%
  filter(infectedCell == 1)
ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point() +
  geom_line() +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID)) + 
  geom_point() +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


##3 with jitter
ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05) +
  geom_line() +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID)) + 
  geom_jitter(height=0,width=.05) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))

## color by peripheral HBV DNA
adef <- haven::read_sas("../data/clinical/datasets/adef.sas7bdat")
dnadf <- adef[adef$PARAMCD=="LGDNA",]
dnadf <- dnadf[dnadf$AVISIT %in% c("Baseline", "Week 40"),]
dnadf <- dnadf %>% 
  group_by(USUBJID, AVISIT) %>%
  filter(ADY==max(ADY))
dnadf <- dnadf[!is.na(dnadf$BASE),] # sometimes two measurements at same day
table(dnadf$USUBJID, dnadf$AVISIT)
dnadf$Subject.ID <- unlist(lapply(strsplit(dnadf$USUBJID, split="-"), "[[", 2))
dnadf$Visit.Week <- dnadf$AVISIT
dnadf$Visit.Week[dnadf$Visit.Week == "Baseline"] <- "W -1"
dnadf$Visit.Week[dnadf$Visit.Week == "Week 40"] <- "W 40"

dataTrustDNARNAInfect2Merged <- merge(dataTrustDNARNAInfect2, dnadf, 
      by = c("Subject.ID", "Visit.Week"))
## categorize
dataTrustDNARNAInfect2Merged$HBVDNA <- dataTrustDNARNAInfect2Merged$AVAL
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL < 1.2] <- "< LLOQ"
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL > 1.2 & dataTrustDNARNAInfect2Merged$AVAL < 2] <- "< 2 >= LLOQ"
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL > 7] <- ">7"
dataTrustDNARNAInfect2Merged$HBVDNA <- factor(dataTrustDNARNAInfect2Merged$HBVDNA,
                                              levels = c("< LLOQ", "< 2 >= LLOQ", ">7"))
table(dataTrustDNARNAInfect2Merged$HBVDNA)

ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point(size=3) +
  geom_line() +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point(size=3) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


##3 with jitter
ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05,size=3) +
  geom_line() +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05,size=3) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))



mBB <- glmmTMB(fraction ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNAInfect2Merged)
summary(mBB)


mBB1 <- glmmTMB(fraction ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNAInfect2Merged[dataTrustDNARNAInfect2Merged$Panel == "Panel1",])
summary(mBB1)


mBB2 <- glmmTMB(fraction ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNAInfect2Merged[dataTrustDNARNAInfect2Merged$Panel == "Panel2",])
summary(mBB2)
```

## sAg colored

TODO 

```{r}
infectedCell <- vector(length=nrow(dataTrustDNARNA))
infectedCell[] <- 1
infectedCell[which(dataTrustDNARNA$cccDNABinary==0 & dataTrustDNARNA$RNABinary==0 & dataTrustDNARNA$HBsAg.binary=="HBsAg negative")] <- 0
dataTrustDNARNA$infectedCell <- infectedCell

dataTrustDNARNAInfect <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel, infectedCell) %>%
  summarize(nCells = n()) %>%
  ungroup() %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  mutate(totalCells = sum(nCells),
         fraction = nCells / totalCells)

## emphasizes time difference
ggplot(dataTrustDNARNAInfect, aes(fill=factor(infectedCell), y=fraction, x=Subject.ID)) + 
    geom_bar(position="stack", stat="identity") +
  facet_nested(.~Panel+Visit.Week, scales="free") + 
  theme_classic() +
  theme(axis.text.x = element_text(angle=45, vjust=.5)) +
  xlab("Subject") +
  ylab("Fraction of hepatocytes") +
  scale_y_continuous(breaks = seq(0,1,by=.1)) +
  guides(fill=guide_legend(title="Infected cell status"))


dataTrustDNARNAInfect2 <- dataTrustDNARNAInfect %>%
  filter(infectedCell == 1)
ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point() +
  geom_line() +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID)) + 
  geom_point() +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


##3 with jitter
ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05) +
  geom_line() +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID)) + 
  geom_jitter(height=0,width=.05) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))

## color by peripheral HBV DNA
adef <- haven::read_sas("../data/clinical/datasets/adef.sas7bdat")
dnadf <- adef[adef$PARAMCD=="LGDNA",]
dnadf <- dnadf[dnadf$AVISIT %in% c("Baseline", "Week 40"),]
dnadf <- dnadf %>% 
  group_by(USUBJID, AVISIT) %>%
  filter(ADY==max(ADY))
dnadf <- dnadf[!is.na(dnadf$BASE),] # sometimes two measurements at same day
table(dnadf$USUBJID, dnadf$AVISIT)
dnadf$Subject.ID <- unlist(lapply(strsplit(dnadf$USUBJID, split="-"), "[[", 2))
dnadf$Visit.Week <- dnadf$AVISIT
dnadf$Visit.Week[dnadf$Visit.Week == "Baseline"] <- "W -1"
dnadf$Visit.Week[dnadf$Visit.Week == "Week 40"] <- "W 40"

dataTrustDNARNAInfect2Merged <- merge(dataTrustDNARNAInfect2, dnadf, 
      by = c("Subject.ID", "Visit.Week"))
## categorize
dataTrustDNARNAInfect2Merged$HBVDNA <- dataTrustDNARNAInfect2Merged$AVAL
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL < 1.2] <- "< LLOQ"
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL > 1.2 & dataTrustDNARNAInfect2Merged$AVAL < 2] <- "<2 >= LLOQ"
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL > 7] <- ">7"
dataTrustDNARNAInfect2Merged$HBVDNA <- factor(dataTrustDNARNAInfect2Merged$HBVDNA,
                                              levels = c("< LLOQ", "<2 >= LLOQ", ">7"))
table(dataTrustDNARNAInfect2Merged$HBVDNA)

ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point(size=3) +
  geom_line() +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point(size=3) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


##3 with jitter
ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05,size=3) +
  geom_line() +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05,size=3) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of infected hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))
```



# Same but for 'silenced hepatocytes' (cccDNA+/HBV-RNA-)

```{r}
silencedCell <- vector(length=nrow(dataTrustDNARNA))
silencedCell[] <- 0
silencedCell[which(dataTrustDNARNA$cccDNABinary==1 & dataTrustDNARNA$RNABinary==0)] <- 1
dataTrustDNARNA$silencedCell <- silencedCell

dataTrustDNARNAInfect <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(fraction = mean(silencedCell),
            nCells = n())


ggplot(dataTrustDNARNAInfect, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point() +
  geom_line() +
  theme_classic() +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID)) + 
  geom_point() +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


##3 with jitter
ggplot(dataTrustDNARNAInfect, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05) +
  geom_line() +
  theme_classic() +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect, aes(x=Visit.Week, y=fraction*100, 
                                   col=Subject.ID, group=Subject.ID)) + 
  geom_jitter(height=0,width=.05) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))

## color by peripheral HBV DNA
adef <- haven::read_sas("../data/clinical/datasets/adef.sas7bdat")
dnadf <- adef[adef$PARAMCD=="LGDNA",]
dnadf <- dnadf[dnadf$AVISIT %in% c("Baseline", "Week 40"),]
dnadf <- dnadf %>% 
  group_by(USUBJID, AVISIT) %>%
  filter(ADY==max(ADY))
dnadf <- dnadf[!is.na(dnadf$BASE),] # sometimes two measurements at same day
table(dnadf$USUBJID, dnadf$AVISIT)
dnadf$Subject.ID <- unlist(lapply(strsplit(dnadf$USUBJID, split="-"), "[[", 2))
dnadf$Visit.Week <- dnadf$AVISIT
dnadf$Visit.Week[dnadf$Visit.Week == "Baseline"] <- "W -1"
dnadf$Visit.Week[dnadf$Visit.Week == "Week 40"] <- "W 40"

dataTrustDNARNAInfect2Merged <- merge(dataTrustDNARNAInfect, dnadf, 
      by = c("Subject.ID", "Visit.Week"))
## categorize
dataTrustDNARNAInfect2Merged$HBVDNA <- dataTrustDNARNAInfect2Merged$AVAL
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL < 1.2] <- "< LLOQ"
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL > 1.2 & dataTrustDNARNAInfect2Merged$AVAL < 2] <- "<2 >= LLOQ"
dataTrustDNARNAInfect2Merged$HBVDNA[dataTrustDNARNAInfect2Merged$AVAL > 7] <- ">7"
dataTrustDNARNAInfect2Merged$HBVDNA <- factor(dataTrustDNARNAInfect2Merged$HBVDNA,
                                              levels = c("< LLOQ", "<2 >= LLOQ", ">7"))
table(dataTrustDNARNAInfect2Merged$HBVDNA)

ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point(size=3) +
  geom_line() +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_point(size=3) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


##3 with jitter
ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05,size=3) +
  geom_line() +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


ggplot(dataTrustDNARNAInfect2Merged, aes(x=Visit.Week, y=fraction*100, 
                                   col=HBVDNA, group=Subject.ID,
                                   shape=Panel)) + 
  geom_jitter(height=0,width=.05,size=3) +
  geom_line() +
  facet_nested(.~Panel, scales="free") +
  theme_classic() +
  guides(col=guide_legend(title="log10 HBV-DNA (IU/mL)")) +
  ylab("Proportion of silenced hepatocytes") +
 scale_y_continuous(breaks=c(0,25,50,75,100)) +
  ylim(c(0,100))


mBB <- glmmTMB(fraction ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNAInfect2Merged)
summary(mBB)


mBB1 <- glmmTMB(fraction ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNAInfect2Merged[dataTrustDNARNAInfect2Merged$Panel == "Panel1",])
summary(mBB1)


mBB2 <- glmmTMB(fraction ~ Visit.Week + Subject.ID,
                  family = betabinomial(link = "logit"),
                weights = nCells,
                data = dataTrustDNARNAInfect2Merged[dataTrustDNARNAInfect2Merged$Panel == "Panel2",])
summary(mBB2)
```






# Data for SDTM database (clinical statistics)

Columns required: patientID	visit	visitDate	panel	nCells	nCellsAfterQC	nDNAPosCells	nRNAPosCells	nDnaPosRNAPosCells	nDnaPosRNANegCells	nDnaNegRNAPosCells	nDnaNegRNANegCells

```{r}
dataTrustDNARNA$RNABinary <- dataTrustDNARNA$HBV.RNA > mitoThreshold
dataTrustDNARNA$cccDNABinary <- as.numeric(dataTrustDNARNA$HBV.cccDNA.AMPLIFIED.1 > mitoThreshold | dataTrustDNARNA$HBV.cccDNA.AMPLIFIED.2 > mitoThreshold)


resDf <- dataTrustDNARNA %>%
  group_by(Subject.ID, Visit.Week, Panel) %>%
  summarize(nCells=90,
            nCellsAfterQC=n(),
            nDNAPosCells=sum(cccDNABinary, na.rm=TRUE),
            nRNAPosCells=sum(RNABinary, na.rm=TRUE),
            nDnaPosRNAPosCells=sum(cccDNABinary==TRUE & RNABinary==TRUE, na.rm=TRUE),
            nDnaPosRNANegCells=sum(cccDNABinary==TRUE & RNABinary==FALSE, na.rm=TRUE),
            nDnaNegRNAPosCells=sum(cccDNABinary==FALSE & RNABinary==TRUE, na.rm=TRUE),
            nDnaNegRNANegCells=sum(cccDNABinary==FALSE & RNABinary==FALSE, na.rm=TRUE))

coreDf <- openxlsx::read.xlsx("../data/clinical/CORE Export for Client 2023-01-09_1700.xlsx",
                              detectDates = FALSE)
table(coreDf$Visit.ID)
coreDf$Visit.Week <- coreDf$Visit.ID
coreDf$Visit.Week[coreDf$Visit.ID == "W-1 (Day -7 to -1)"] <- "W -1"
coreDf$Visit.Week[coreDf$Visit.ID == "+/- W40 (Day 281 +/- 4we)" ] <- "W 40"
coreDf$Visit.Week[coreDf$Visit.ID == "W12 (Day 86) (Panel 3, France only)" ] <- "W 12"
coreDf$Visit.Week[coreDf$Visit.ID == "+/- FU W24 (Day 169 in FU period +/- 4we)" ] <- "FU W 24"
coreDf$Visit.Week[coreDf$Visit.ID == "W40 (Day 282) (Panel 3, France only)" ] <- "W 40"

allMerge <- merge(resDf, coreDf, by=c("Subject.ID", "Visit.Week"))


resDf2 <- allMerge[,c(colnames(resDf), "Date.of.biopsy")]
resDf2$Date.of.biopsy <- as.Date(resDf2$Date.of.biopsy, origin = "1899-12-30")
colnames(resDf2)[1:3] <- c("patientID", "visit", "panel")
colnames(resDf2)[colnames(resDf2) == "Date.of.biopsy"] <- "visitDate"

write.csv(resDf2,
          file="../data/scddPCRClinData.csv",
          row.names = FALSE,
          quote=FALSE)
```


# EASL abstract info

```{r}
## fraction DNA+ cells
dataTrust %>%
  subset(Visit.Week == "W -1") %>% 
  group_by(Subject.ID, Panel) %>%
  summarize(fracPositive = mean(cccDNABinary, na.rm=TRUE),
            nCells = n()) %>%
  group_by(Panel) %>%
  summarize(minpos=min(fracPositive),
            maxpos=max(fracPositive),
            meanpos=mean(fracPositive),
            medianpos=median(fracPositive),
            sd=sd(fracPositive),
            q25=quantile(fracPositive, .25),
            q75=quantile(fracPositive, .75))

## fraction RNA+ cells
dataRNA %>%
  subset(Visit.Week == "W -1") %>% 
  group_by(Subject.ID, Panel) %>%
  summarize(fracRNA = mean(RNABinary, na.rm=TRUE),
            nCells = n())

dataRNA %>%
  subset(Visit.Week == "W -1") %>% 
  group_by(Subject.ID, Panel) %>%
  summarize(fracRNA = mean(RNABinary, na.rm=TRUE),
            nCells = n()) %>%
  group_by(Panel) %>%
  summarize(minfrac=min(fracRNA),
            maxfrac=max(fracRNA),
            meanpos=mean(fracRNA),
            medianpos=median(fracRNA),
            sd=sd(fracRNA),
            q25=quantile(fracRNA, .25),
            q75=quantile(fracRNA, .75))

## fraction of silenced hepatocytes per panel
dataTrustDNARNA %>%
  subset(Visit.Week == "W -1") %>% 
  group_by(Subject.ID, Panel) %>%
  summarize(fracPositiveDNA = mean(cccDNABinary, na.rm=TRUE),
            fracPositiveRNA = mean(RNABinary, na.rm=TRUE),
            fracPositiveDNARNA = mean((cccDNABinary == 1) & (RNABinary==FALSE), na.rm=TRUE),
            nCells = n()) %>%
  group_by(Panel) %>%
  summarize(minfrac=min(fracPositiveDNARNA),
            maxfrac=max(fracPositiveDNARNA),
            meanpos=mean(fracPositiveDNARNA),
            medianpos=median(fracPositiveDNARNA),
            sd=sd(fracPositiveDNARNA),
            q25=quantile(fracPositiveDNARNA, .25),
            q75=quantile(fracPositiveDNARNA, .75))
```

